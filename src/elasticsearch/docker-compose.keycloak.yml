# Docker Compose override for Keycloak OIDC integration
# Usage: COMPOSE_PROFILES=keycloak docker-compose -f docker-compose.yml -f docker-compose.keycloak.yml -f docker-compose.dev.yml up -d

services:
  elasticsearch:
    environment:
      # OIDC Configuration for Keycloak integration
      - "xpack.security.authc.token.enabled=true"
      - "xpack.security.authc.realms.oidc.oidc1.order=2"
      - "xpack.security.authc.realms.oidc.oidc1.rp.client_id=${KEYCLOAK_CLIENT_ID:-elasticsearch}"
      - "xpack.security.authc.realms.oidc.oidc1.rp.response_type=code"
      - "xpack.security.authc.realms.oidc.oidc1.rp.requested_scopes=openid,profile,email,groups"
      - "xpack.security.authc.realms.oidc.oidc1.rp.redirect_uri=${KEYCLOAK_PROTOCOL:-http}://${KEYCLOAK_HOST:-localhost}:${KEYCLOAK_PORT:-8080}/api/security/oidc/callback"
      - "xpack.security.authc.realms.oidc.oidc1.op.issuer=${KEYCLOAK_PROTOCOL:-http}://${KEYCLOAK_HOST:-localhost}:${KEYCLOAK_PORT:-8080}/realms/${KEYCLOAK_REALM:-master}"
      - "xpack.security.authc.realms.oidc.oidc1.op.authorization_endpoint=${KEYCLOAK_PROTOCOL:-http}://${KEYCLOAK_HOST:-localhost}:${KEYCLOAK_PORT:-8080}/realms/${KEYCLOAK_REALM:-master}/protocol/openid-connect/auth"
      - "xpack.security.authc.realms.oidc.oidc1.op.token_endpoint=${KEYCLOAK_PROTOCOL:-http}://${KEYCLOAK_HOST:-localhost}:${KEYCLOAK_PORT:-8080}/realms/${KEYCLOAK_REALM:-master}/protocol/openid-connect/token"
      - "xpack.security.authc.realms.oidc.oidc1.op.userinfo_endpoint=${KEYCLOAK_PROTOCOL:-http}://${KEYCLOAK_HOST:-localhost}:${KEYCLOAK_PORT:-8080}/realms/${KEYCLOAK_REALM:-master}/protocol/openid-connect/userinfo"
      - "xpack.security.authc.realms.oidc.oidc1.op.endsession_endpoint=${KEYCLOAK_PROTOCOL:-http}://${KEYCLOAK_HOST:-localhost}:${KEYCLOAK_PORT:-8080}/realms/${KEYCLOAK_REALM:-master}/protocol/openid-connect/logout"
      - "xpack.security.authc.realms.oidc.oidc1.op.jwkset_path=${KEYCLOAK_PROTOCOL:-http}://${KEYCLOAK_HOST:-localhost}:${KEYCLOAK_PORT:-8080}/realms/${KEYCLOAK_REALM:-master}/protocol/openid-connect/certs"
      - "xpack.security.authc.realms.oidc.oidc1.claims.principal=preferred_username"
      - "xpack.security.authc.realms.oidc.oidc1.claims.groups=groups"
    networks:
      - keycloak-network

  # Helper service to ensure keycloak network exists when profile is active
  keycloak-network-bridge:
    image: alpine:latest
    container_name: elasticsearch-keycloak-bridge
    profiles: [ "keycloak" ]
    command: [ "echo", "Keycloak network bridge active" ]
    networks:
      - keycloak-network
    depends_on:
      - elasticsearch

networks:
  keycloak-network:
    name: keycloak-network
    external: true
